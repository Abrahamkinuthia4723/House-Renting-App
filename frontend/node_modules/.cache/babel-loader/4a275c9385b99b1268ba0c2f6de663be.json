{"ast":null,"code":"var _jsxFileName = \"/home/abraham/House-Renting-App/frontend/src/pages/AddHouseForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form, FormGroup, Label, Input, Button, Alert } from 'reactstrap';\nimport { useForm, Controller } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddHouseForm = () => {\n  _s();\n\n  const [houseTypes, setHouseTypes] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:8000/house_types`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      setHouseTypes(data);\n    }).catch(err => console.log(err));\n  }, []);\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    register\n  } = useForm();\n\n  const onSubmit = formData => {\n    console.log('Form submitted:', formData); // Handle form submission logic here\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-4 mb-4\",\n      children: \"Add House Form (In case you want to rent out your house)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          id: \"name\",\n          ...register('name', {\n            required: 'Name is required'\n          }),\n          placeholder: \"Enter name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: errors.name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"type\",\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"type\",\n          control: control,\n          rules: {\n            required: 'Type is required'\n          },\n          render: _ref => {\n            let {\n              field,\n              fieldState\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"select\",\n                id: \"type\",\n                ...field,\n                placeholder: \"Select type of house\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"SELECT TYPE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 19\n                }, this), houseTypes.map(houseType => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: houseType.id,\n                  children: houseType.name\n                }, houseType.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), fieldState.error && /*#__PURE__*/_jsxDEV(Alert, {\n                color: \"danger\",\n                children: fieldState.error.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"location\",\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          id: \"location\",\n          ...register('location', {\n            required: 'Location is required'\n          }),\n          placeholder: \"Enter location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), errors.location && /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: errors.location.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"image\",\n          children: \"Image URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"url\",\n          id: \"image\",\n          ...register('image', {\n            required: 'Image URL is required'\n          }),\n          placeholder: \"Enter image URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), errors.image && /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: errors.image.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"textarea\",\n          id: \"description\",\n          ...register('description', {\n            required: 'Description is required'\n          }),\n          placeholder: \"Enter description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), errors.description && /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: errors.description.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"yearOfBirth\",\n          children: \"Year of Birth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          id: \"yearOfBirth\",\n          ...register('yearOfBirth', {\n            required: 'Year of Birth is required'\n          }),\n          placeholder: \"Enter year of birth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), errors.yearOfBirth && /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: errors.yearOfBirth.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Add House\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddHouseForm, \"loraRck3CTcBE7fHC4eBCp3wEiI=\", false, function () {\n  return [useForm];\n});\n\n_c = AddHouseForm;\nexport default AddHouseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddHouseForm\");","map":{"version":3,"names":["React","useState","useEffect","Container","Form","FormGroup","Label","Input","Button","Alert","useForm","Controller","AddHouseForm","houseTypes","setHouseTypes","fetch","method","headers","then","res","json","data","catch","err","console","log","control","handleSubmit","formState","errors","register","onSubmit","formData","required","name","message","field","fieldState","map","houseType","id","error","location","image","description","yearOfBirth"],"sources":["/home/abraham/House-Renting-App/frontend/src/pages/AddHouseForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';  \nimport { Container, Form, FormGroup, Label, Input, Button, Alert } from 'reactstrap';\nimport { useForm, Controller } from 'react-hook-form';\n\nconst AddHouseForm = () => {\n  const [houseTypes, setHouseTypes] = useState([]);\n\n  useEffect(() => {\n    fetch(`http://localhost:8000/house_types`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setHouseTypes(data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const { control, handleSubmit, formState: { errors }, register } = useForm();\n\n  const onSubmit = (formData) => {\n    console.log('Form submitted:', formData);\n    // Handle form submission logic here\n  };\n\n  return (\n    <Container>\n      <h2 className=\"mt-4 mb-4\">Add House Form (In case you want to rent out your house)</h2>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <FormGroup>\n          <Label for=\"name\">Name</Label>\n          <Input\n            type=\"text\"\n            id=\"name\"\n            {...register('name', { required: 'Name is required' })}\n            placeholder=\"Enter name\"\n          />\n          {errors.name && <Alert color=\"danger\">{errors.name.message}</Alert>}\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"type\">Type</Label>\n          <Controller\n            name=\"type\"\n            control={control}\n            rules={{ required: 'Type is required' }}\n            render={({ field, fieldState }) => (\n              <>\n                <Input\n                  type=\"select\"\n                  id=\"type\"\n                  {...field}\n                  placeholder=\"Select type of house\"\n                >\n                  <option value=\"\">SELECT TYPE</option>\n                  {houseTypes.map((houseType) => (\n                    <option key={houseType.id} value={houseType.id}>\n                      {houseType.name}\n                    </option>\n                  ))}\n                </Input>\n                {fieldState.error && <Alert color=\"danger\">{fieldState.error.message}</Alert>}\n              </>\n            )}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"location\">Location</Label>\n          <Input\n            type=\"text\"\n            id=\"location\"\n            {...register('location', { required: 'Location is required' })}\n            placeholder=\"Enter location\"\n          />\n          {errors.location && <Alert color=\"danger\">{errors.location.message}</Alert>}\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"image\">Image URL</Label>\n          <Input\n            type=\"url\"\n            id=\"image\"\n            {...register('image', { required: 'Image URL is required' })}\n            placeholder=\"Enter image URL\"\n          />\n          {errors.image && <Alert color=\"danger\">{errors.image.message}</Alert>}\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"description\">Description</Label>\n          <Input\n            type=\"textarea\"\n            id=\"description\"\n            {...register('description', { required: 'Description is required' })}\n            placeholder=\"Enter description\"\n          />\n          {errors.description && <Alert color=\"danger\">{errors.description.message}</Alert>}\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"yearOfBirth\">Year of Birth</Label>\n          <Input\n            type=\"number\"\n            id=\"yearOfBirth\"\n            {...register('yearOfBirth', { required: 'Year of Birth is required' })}\n            placeholder=\"Enter year of birth\"\n          />\n          {errors.yearOfBirth && <Alert color=\"danger\">{errors.yearOfBirth.message}</Alert>}\n        </FormGroup>\n        <Button color=\"primary\" type=\"submit\">Add House</Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default AddHouseForm;\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}